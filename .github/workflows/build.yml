name: Build Book with Crowbook

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust and Crowbook
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          cargo install crowbook --version 0.16.0

      - name: Create validated book.md
        run: |
          # Create minimal valid YAML header
          cat > book.md << 'EOF'
          ---
          title: "My Book"
          author: "Author Name"
          lang: "en"
          date: "2023-01-01"
          ---

          EOF

          # Append content from other markdown files
          for file in *.md; do
            if [ "$file" != "book.md" ]; then
              # Skip any existing YAML blocks
              awk 'BEGIN {y=0} /^---/ {y++; next} y>=2 || y==0' "$file" >> book.md
              echo -e "\n" >> book.md
            fi
          done

          # Validate YAML structure
          echo "Validating YAML header..."
          awk '/^---/{flag=1; next} /^---/{flag=0} flag' book.md | yamllint - || {
            echo "YAML validation failed! Showing header:"
            head -n 10 book.md
            exit 1
          }

      - name: Generate outputs
        run: |
          mkdir -p output
          echo "Generating outputs..."
          
          # Generate with verbose logging
          crowbook -v --to epub --output output/book.epub book.md 2>&1 | tee epub.log
          crowbook -v --to pdf --output output/book.pdf book.md 2>&1 | tee pdf.log
          crowbook -v --to html --output output/book.html book.md 2>&1 | tee html.log
          
          # Verify outputs were created
          [ -f output/book.epub ] || echo "Warning: EPUB not generated"
          [ -f output/book.pdf ] || echo "Warning: PDF not generated"
          [ -f output/book.html ] || echo "Warning: HTML not generated"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: book-artifacts
          path: |
            output/*
            *.log
            book.md
          retention-days: 1
